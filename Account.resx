<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPJSURBVHhe7ZpZ6E1bHMf/XPPNIynCg6GMkaHkAcmLIooHQxlKEop4udeDbtdwHyiS6UHK7IEQ
        4oEXSoYS8UCSIQrJlK7Z51vnV6vT8v+fvc/ap7W0P/Wp/3+ds3/rt/bZa+2911pNJSUlJSWNpzdOxqW4
        CY/hVbyHD/AVvsbvOBCTpz1Ow334DH9kcC0mSyf8G5+jr3G1eAeTZBw+Ql+jsppcN1iAX9DXmDwm1Q2m
        4Ff0NSSvyXSDrvgSfY2o18e4EKNGtzRf8iHV7TNKOuBb9CUdUnWHVhgd09GXcBGOxOjYjL5ki3ANRscF
        dJPcgxoUJ+JK3Ian8BY+RD3qfsZPlb/1CHwNj+B61BXVHf9DN648jtGhBliCegbohiFojVfQPQE6idHx
        Di3BiyoIyCR0T8BTjA5dzpbgXyoIiEZ9PQdY/I8YHZacnKqCwOxGt47ocJMboILALEG3juhwk+uigsCM
        RbeO6HCTa6OCwPREt47oKDq5P7HoOuqiEck1oo5cjMFGJOfWoTqjQY+vltghFRSEYls9qjMa3JneIufv
        BqHVozqj4X+0xDQTXBSKbfWozmi4j5bYKBUUxGi0erSIEg170RI7jXqDC41inkWrR6/b0TAcv6EltxND
        o5gWX3UNw6hwJy6UYF8MRT90T/AGjA5dou6s0HYMhfvrq44iulgQNP1liWp+YDDWy1B0V5kmYNScR0tW
        U1ltMS/tUPOEFu8cRk9//ICWtCZD87IDLc571FiQBLPREpfLMSsr0I0xC5PC/fW002MR1spi1DF2fMgB
        tWH0QGuAnYR/sLllLX32L7rHScVKjuopLHM/ah2xGpUdRN8xipUc89HXGKkFzhFoDMGb6PuunIfJsQ6t
        ASdxI7r9ujl3od4p7H91i+RwJ0l0MoTWC7QOaOXVanl9JgqtD1r5YRWkxg20BsxVQQXtEdQ4oNUd+1x/
        awtdLzR0jH2uWMnxBq0Bbn+vFe0BsON1ZSRBH9TuT/e9Xf2+M2ZFx7hjhmIqtuqIho6oFyANcNfRknXV
        omZenqAvppbiNVDOwDwnty70CyzDM+j24195G//ArOgYHeuL6aoclItyKuTqqOVXbkndEbIsl6nxGhR9
        sVoyyNWR9VeuxROo5a2W0Hf03OCLkdXcV8cL9AWsV73bu7e6anSLzHuVtaTaVDPa4uILEkLdHudgNbrv
        u7fO0GbatrMFfUFCegnHV7xcKSvSrVgzSsoXJGW1fb9m9F5+AH2BUvQoZt5eqwnJ1XgXQ+79b5TKWbmv
        wnomZktKSkpKflOamn4CUOeEO9YLPCMAAAAASUVORK5CYII=
</value>
  </data>
</root>